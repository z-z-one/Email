name: CI/CD using github actions & docker

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

    - name: Build with Gradle Wrapper
      run: sudo ./gradlew build -x test

    # Docker build & Push 
    - name: Docker build & push to Docker hub
      run: |
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
        docker build -f docker/Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/900pro:latest .
        docker push ${{ secrets.DOCKER_USERNAME }}/900pro:latest

    # EC2 배포
    - name: Docker image pull & Deploy to EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_PRIVATE_KEY }}
        script: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker pull ${{ secrets.DOCKER_USERNAME }}/900pro:latest
          docker stop $(docker ps -a -q)
          docker rm $(docker ps --filter 'status=exited' -a -q)
          docker run -d \
            --env-file /home/ubuntu/.ssh/900pro-be/.env \
            --log-driver=syslog \
            -p 8080:8080 \
            --name myapp \
            ${{ secrets.DOCKER_USERNAME }}/900pro:latest \
            --spring.profiles.active=prod
          docker image prune -a -f
